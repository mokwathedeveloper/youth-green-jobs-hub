# Generated by Django 5.2.6 on 2025-09-22 12:53

import django.core.validators
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DashboardAlert',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='Alert title', max_length=200)),
                ('message', models.TextField(help_text='Alert message')),
                ('alert_type', models.CharField(choices=[('info', 'Information'), ('warning', 'Warning'), ('error', 'Error'), ('success', 'Success')], default='info', help_text='Type of alert', max_length=20)),
                ('category', models.CharField(choices=[('system', 'System'), ('performance', 'Performance'), ('user_activity', 'User Activity'), ('waste_collection', 'Waste Collection'), ('marketplace', 'Marketplace'), ('environmental', 'Environmental')], help_text='Alert category', max_length=30)),
                ('is_active', models.BooleanField(default=True, help_text='Whether alert is currently active')),
                ('is_acknowledged', models.BooleanField(default=False, help_text='Whether alert has been acknowledged')),
                ('acknowledged_at', models.DateTimeField(blank=True, help_text='When alert was acknowledged', null=True)),
                ('alert_data', models.JSONField(blank=True, default=dict, help_text='Additional alert data and context')),
                ('auto_resolve_at', models.DateTimeField(blank=True, help_text='When alert should auto-resolve', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Dashboard Alert',
                'verbose_name_plural': 'Dashboard Alerts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EnvironmentalImpactMetrics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField(help_text='Date for environmental impact calculation', unique=True)),
                ('total_waste_diverted_kg', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total waste diverted from landfills (kg)', max_digits=12)),
                ('plastic_recycled_kg', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Plastic waste recycled (kg)', max_digits=10)),
                ('paper_recycled_kg', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Paper waste recycled (kg)', max_digits=10)),
                ('metal_recycled_kg', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Metal waste recycled (kg)', max_digits=10)),
                ('glass_recycled_kg', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Glass waste recycled (kg)', max_digits=10)),
                ('organic_composted_kg', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Organic waste composted (kg)', max_digits=10)),
                ('co2_reduction_kg', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='CO2 emissions reduced (kg)', max_digits=12)),
                ('co2_equivalent_trees_planted', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Equivalent trees planted for CO2 reduction', max_digits=10)),
                ('energy_saved_kwh', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Energy saved through recycling (kWh)', max_digits=10)),
                ('water_saved_liters', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Water saved through recycling (liters)', max_digits=12)),
                ('landfill_space_saved_m3', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Landfill space saved (cubic meters)', max_digits=10)),
                ('economic_value_ksh', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Economic value generated (KSh)', max_digits=12)),
                ('jobs_supported', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Green jobs supported (full-time equivalent)', max_digits=8)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Environmental Impact Metrics',
                'verbose_name_plural': 'Environmental Impact Metrics',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='PlatformMetrics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField(help_text='Date for which metrics are calculated', unique=True)),
                ('total_users', models.PositiveIntegerField(default=0, help_text='Total registered users')),
                ('new_users_today', models.PositiveIntegerField(default=0, help_text='New users registered today')),
                ('active_users_today', models.PositiveIntegerField(default=0, help_text='Users who logged in today')),
                ('youth_users', models.PositiveIntegerField(default=0, help_text='Total youth users (age 18-35)')),
                ('sme_vendors', models.PositiveIntegerField(default=0, help_text='Total SME vendors registered')),
                ('verified_vendors', models.PositiveIntegerField(default=0, help_text='Total verified SME vendors')),
                ('total_waste_reports', models.PositiveIntegerField(default=0, help_text='Total waste reports submitted')),
                ('waste_reports_today', models.PositiveIntegerField(default=0, help_text='Waste reports submitted today')),
                ('total_waste_collected_kg', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total waste collected in kilograms', max_digits=12)),
                ('waste_collected_today_kg', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Waste collected today in kilograms', max_digits=10)),
                ('total_credits_earned', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total credits earned by users', max_digits=12)),
                ('credits_earned_today', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Credits earned today', max_digits=10)),
                ('total_co2_reduction_kg', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total CO2 reduction in kilograms', max_digits=12)),
                ('co2_reduction_today_kg', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='CO2 reduction today in kilograms', max_digits=10)),
                ('total_products', models.PositiveIntegerField(default=0, help_text='Total products listed')),
                ('products_added_today', models.PositiveIntegerField(default=0, help_text='Products added today')),
                ('total_orders', models.PositiveIntegerField(default=0, help_text='Total orders placed')),
                ('orders_today', models.PositiveIntegerField(default=0, help_text='Orders placed today')),
                ('total_sales_ksh', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total sales in Kenyan Shillings', max_digits=12)),
                ('sales_today_ksh', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Sales today in Kenyan Shillings', max_digits=10)),
                ('total_credits_spent', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total credits spent on products', max_digits=12)),
                ('credits_spent_today', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Credits spent today', max_digits=10)),
                ('total_collection_events', models.PositiveIntegerField(default=0, help_text='Total collection events organized')),
                ('events_today', models.PositiveIntegerField(default=0, help_text='Collection events today')),
                ('total_event_participants', models.PositiveIntegerField(default=0, help_text='Total event participants')),
                ('event_participants_today', models.PositiveIntegerField(default=0, help_text='Event participants today')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Platform Metrics',
                'verbose_name_plural': 'Platform Metrics',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='SystemPerformanceMetrics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(help_text='Timestamp for performance measurement')),
                ('api_response_time_ms', models.PositiveIntegerField(default=0, help_text='Average API response time in milliseconds')),
                ('api_requests_count', models.PositiveIntegerField(default=0, help_text='Total API requests in the last hour')),
                ('api_error_rate', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='API error rate percentage', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('db_query_time_ms', models.PositiveIntegerField(default=0, help_text='Average database query time in milliseconds')),
                ('db_connections_active', models.PositiveIntegerField(default=0, help_text='Active database connections')),
                ('cpu_usage_percent', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='CPU usage percentage', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('memory_usage_percent', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Memory usage percentage', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('disk_usage_percent', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Disk usage percentage', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('concurrent_users', models.PositiveIntegerField(default=0, help_text='Concurrent active users')),
                ('page_load_time_ms', models.PositiveIntegerField(default=0, help_text='Average page load time in milliseconds')),
                ('error_count', models.PositiveIntegerField(default=0, help_text='Number of errors in the last hour')),
                ('warning_count', models.PositiveIntegerField(default=0, help_text='Number of warnings in the last hour')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'System Performance Metrics',
                'verbose_name_plural': 'System Performance Metrics',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='UserEngagementMetrics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField(help_text='Date for engagement metrics')),
                ('login_count', models.PositiveIntegerField(default=0, help_text='Number of logins today')),
                ('session_duration_minutes', models.PositiveIntegerField(default=0, help_text='Total session duration in minutes')),
                ('pages_visited', models.PositiveIntegerField(default=0, help_text='Number of pages visited')),
                ('waste_reports_submitted', models.PositiveIntegerField(default=0, help_text='Waste reports submitted today')),
                ('waste_collected_kg', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Waste collected today in kg', max_digits=8)),
                ('credits_earned', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Credits earned today', max_digits=8)),
                ('events_joined', models.PositiveIntegerField(default=0, help_text='Collection events joined today')),
                ('products_viewed', models.PositiveIntegerField(default=0, help_text='Products viewed today')),
                ('products_added_to_cart', models.PositiveIntegerField(default=0, help_text='Products added to cart today')),
                ('orders_placed', models.PositiveIntegerField(default=0, help_text='Orders placed today')),
                ('credits_spent', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Credits spent today', max_digits=8)),
                ('money_spent_ksh', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Money spent today in KSh', max_digits=8)),
                ('reviews_written', models.PositiveIntegerField(default=0, help_text='Product reviews written today')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'User Engagement Metrics',
                'verbose_name_plural': 'User Engagement Metrics',
                'ordering': ['-date', 'user'],
            },
        ),
        migrations.CreateModel(
            name='CountyMetrics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('county', models.CharField(help_text='County name', max_length=100)),
                ('date', models.DateField(help_text='Date for county metrics')),
                ('total_users', models.PositiveIntegerField(default=0, help_text='Total users in this county')),
                ('active_users', models.PositiveIntegerField(default=0, help_text='Active users today in this county')),
                ('sme_vendors', models.PositiveIntegerField(default=0, help_text='SME vendors in this county')),
                ('waste_reports', models.PositiveIntegerField(default=0, help_text='Waste reports from this county')),
                ('waste_collected_kg', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Waste collected in this county (kg)', max_digits=10)),
                ('credits_earned', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Credits earned in this county', max_digits=10)),
                ('co2_reduction_kg', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='CO2 reduction in this county (kg)', max_digits=10)),
                ('products_listed', models.PositiveIntegerField(default=0, help_text='Products listed by vendors in this county')),
                ('orders_placed', models.PositiveIntegerField(default=0, help_text='Orders placed in this county')),
                ('sales_ksh', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Sales in this county (KSh)', max_digits=10)),
                ('credits_spent', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Credits spent in this county', max_digits=10)),
                ('collection_events', models.PositiveIntegerField(default=0, help_text='Collection events in this county')),
                ('event_participants', models.PositiveIntegerField(default=0, help_text='Event participants in this county')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'County Metrics',
                'verbose_name_plural': 'County Metrics',
                'ordering': ['-date', 'county'],
                'indexes': [models.Index(fields=['county', 'date'], name='analytics_c_county_b718e0_idx'), models.Index(fields=['date'], name='analytics_c_date_7fb753_idx'), models.Index(fields=['-date'], name='analytics_c_date_a462ab_idx')],
                'unique_together': {('county', 'date')},
            },
        ),
    ]
