"""
Django settings for youth_green_jobs_backend project.

Youth Green Jobs & Waste Recycling Hub - Kisumu
A platform connecting youth with green jobs and eco-friendly marketplace.

Generated by 'django-admin startproject' using Django 5.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from decouple import config
import os
from datetime import timedelta

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY', default='django-insecure-uhsi35+^f&t6liju3%4qr4=h$$#3@@)pnx=butdlu#x2cc+bf8')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=True, cast=bool)

ALLOWED_HOSTS = config('ALLOWED_HOSTS', default='localhost,127.0.0.1', cast=lambda v: [s.strip() for s in v.split(',')])


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Third party apps
    'rest_framework',
    'rest_framework_simplejwt',
    'corsheaders',
    'django_filters',

    # Local apps
    'authentication',
    'waste_collection',
    'products',
    'waste_management',
    'eco_products',
    'analytics',
    'gamification',
    'partnerships',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'youth_green_jobs_backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'youth_green_jobs_backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# Support for DATABASE_URL (for production) or fallback to SQLite (for development)
DATABASE_URL = config('DATABASE_URL', default=None)

if DATABASE_URL:
    # Production database configuration using DATABASE_URL
    import dj_database_url
    DATABASES = {
        'default': dj_database_url.parse(DATABASE_URL)
    }
    # Override engine to use PostGIS for spatial support
    DATABASES['default']['ENGINE'] = 'django.contrib.gis.db.backends.postgis'
else:
    # Development database configuration (SpatiaLite for GIS support)
    DATABASES = {
        'default': {
            'ENGINE': config('DB_ENGINE', default='django.contrib.gis.db.backends.spatialite'),
            'NAME': config('DB_NAME', default=str(BASE_DIR / 'db.sqlite3')),
            'USER': config('DB_USER', default=''),
            'PASSWORD': config('DB_PASSWORD', default=''),
            'HOST': config('DB_HOST', default=''),
            'PORT': config('DB_PORT', default=''),
            'OPTIONS': {
                'init_command': config('DB_INIT_COMMAND', default=''),
            } if config('DB_INIT_COMMAND', default='') else {},
        }
    }

# Database connection settings
DATABASES['default'].update({
    'CONN_MAX_AGE': config('DB_CONN_MAX_AGE', default=0, cast=int),
    'CONN_HEALTH_CHECKS': config('DB_CONN_HEALTH_CHECKS', default=False, cast=bool),
})


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Additional locations of static files
STATICFILES_DIRS = [
    BASE_DIR / 'youth_green_jobs_backend' / 'static',
]

# Media files
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Django REST Framework Configuration
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': config('DRF_PAGE_SIZE', default=20, cast=int),
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
    ],
    'DEFAULT_PARSER_CLASSES': [
        'rest_framework.parsers.JSONParser',
        'rest_framework.parsers.MultiPartParser',
        'rest_framework.parsers.FormParser',
    ],
}

# CORS Configuration
CORS_ALLOWED_ORIGINS = config(
    'CORS_ALLOWED_ORIGINS',
    default='http://localhost:3000,http://127.0.0.1:3000,http://localhost:5173,http://127.0.0.1:5173,http://localhost:5174,http://127.0.0.1:5174',
    cast=lambda v: [s.strip() for s in v.split(',')]
)

CORS_ALLOW_CREDENTIALS = config('CORS_ALLOW_CREDENTIALS', default=True, cast=bool)

# Additional CORS settings for development
CORS_ALLOW_ALL_ORIGINS = config('CORS_ALLOW_ALL_ORIGINS', default=True, cast=bool)
CORS_ALLOWED_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
]

# Custom User Model
AUTH_USER_MODEL = 'authentication.User'

# Time Zone for Kisumu, Kenya
TIME_ZONE = 'Africa/Nairobi'

# Internationalization
LANGUAGE_CODE = 'en-us'
USE_I18N = True
USE_TZ = True

# Security Settings
SECURE_BROWSER_XSS_FILTER = config('SECURE_BROWSER_XSS_FILTER', default=True, cast=bool)
SECURE_CONTENT_TYPE_NOSNIFF = config('SECURE_CONTENT_TYPE_NOSNIFF', default=True, cast=bool)
X_FRAME_OPTIONS = config('X_FRAME_OPTIONS', default='DENY')
SECURE_HSTS_SECONDS = config('SECURE_HSTS_SECONDS', default=0, cast=int)
SECURE_HSTS_INCLUDE_SUBDOMAINS = config('SECURE_HSTS_INCLUDE_SUBDOMAINS', default=False, cast=bool)
SECURE_HSTS_PRELOAD = config('SECURE_HSTS_PRELOAD', default=False, cast=bool)
SECURE_SSL_REDIRECT = config('SECURE_SSL_REDIRECT', default=False, cast=bool)
SECURE_PROXY_SSL_HEADER = None
if config('SECURE_PROXY_SSL_HEADER', default=''):
    SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

# Session Security
SESSION_COOKIE_SECURE = config('SESSION_COOKIE_SECURE', default=False, cast=bool)
SESSION_COOKIE_HTTPONLY = config('SESSION_COOKIE_HTTPONLY', default=True, cast=bool)
SESSION_COOKIE_SAMESITE = config('SESSION_COOKIE_SAMESITE', default='Lax')
SESSION_COOKIE_AGE = config('SESSION_COOKIE_AGE', default=1209600, cast=int)  # 2 weeks

# CSRF Security
CSRF_COOKIE_SECURE = config('CSRF_COOKIE_SECURE', default=False, cast=bool)
CSRF_COOKIE_HTTPONLY = config('CSRF_COOKIE_HTTPONLY', default=True, cast=bool)
CSRF_COOKIE_SAMESITE = config('CSRF_COOKIE_SAMESITE', default='Lax')
CSRF_TRUSTED_ORIGINS = config(
    'CSRF_TRUSTED_ORIGINS',
    default='',
    cast=lambda v: [s.strip() for s in v.split(',') if s.strip()]
)

# Email Configuration (for production)
EMAIL_BACKEND = config('EMAIL_BACKEND', default='django.core.mail.backends.console.EmailBackend')
EMAIL_HOST = config('EMAIL_HOST', default='')
EMAIL_PORT = config('EMAIL_PORT', default=587, cast=int)
EMAIL_USE_TLS = config('EMAIL_USE_TLS', default=True, cast=bool)
EMAIL_HOST_USER = config('EMAIL_HOST_USER', default='')
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD', default='')

# Logging Configuration
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': BASE_DIR / 'logs' / 'django.log',
        },
        'console': {
            'level': 'INFO',
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file', 'console'],
            'level': 'INFO',
            'propagate': True,
        },
        'youth_green_jobs_backend': {
            'handlers': ['file', 'console'],
            'level': 'INFO',
            'propagate': True,
        },
    },
}

# JWT Configuration
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=config('JWT_ACCESS_TOKEN_LIFETIME_MINUTES', default=60, cast=int)),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=config('JWT_REFRESH_TOKEN_LIFETIME_DAYS', default=7, cast=int)),
    'ROTATE_REFRESH_TOKENS': config('JWT_ROTATE_REFRESH_TOKENS', default=True, cast=bool),
    'BLACKLIST_AFTER_ROTATION': config('JWT_BLACKLIST_AFTER_ROTATION', default=True, cast=bool),
    'UPDATE_LAST_LOGIN': config('JWT_UPDATE_LAST_LOGIN', default=True, cast=bool),

    'ALGORITHM': config('JWT_ALGORITHM', default='HS256'),
    'SIGNING_KEY': SECRET_KEY,
    'VERIFYING_KEY': None,
    'AUDIENCE': config('JWT_AUDIENCE', default=None),
    'ISSUER': config('JWT_ISSUER', default='youth-green-jobs-hub'),
    'JSON_ENCODER': None,
    'JWK_URL': None,
    'LEEWAY': config('JWT_LEEWAY', default=0, cast=int),

    'AUTH_HEADER_TYPES': ('Bearer',),
    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',
    'USER_AUTHENTICATION_RULE': 'rest_framework_simplejwt.authentication.default_user_authentication_rule',

    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',
    'TOKEN_USER_CLASS': 'rest_framework_simplejwt.models.TokenUser',

    'JTI_CLAIM': 'jti',

    'SLIDING_TOKEN_REFRESH_EXP_CLAIM': 'refresh_exp',
    'SLIDING_TOKEN_LIFETIME': timedelta(minutes=config('JWT_SLIDING_TOKEN_LIFETIME_MINUTES', default=60, cast=int)),
    'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=config('JWT_SLIDING_TOKEN_REFRESH_LIFETIME_DAYS', default=7, cast=int)),
}

# ===== APPLICATION-SPECIFIC CONFIGURATION =====

# Platform Configuration
PLATFORM_CONFIG = {
    'DEFAULT_COUNTY': config('DEFAULT_COUNTY', default='Kisumu'),
    'DEFAULT_COUNTRY': config('DEFAULT_COUNTRY', default='Kenya'),
    'DEFAULT_TIMEZONE': config('DEFAULT_TIMEZONE', default='Africa/Nairobi'),
    'PLATFORM_NAME': config('PLATFORM_NAME', default='Youth Green Jobs & Waste Recycling Hub'),
    'PLATFORM_VERSION': config('PLATFORM_VERSION', default='1.0.0'),
    'SUPPORT_EMAIL': config('SUPPORT_EMAIL', default='support@youthgreenjobs.ke'),
    'SUPPORT_WEBSITE': config('SUPPORT_WEBSITE', default='https://youthgreenjobs.ke'),
}

# Youth Eligibility Configuration
YOUTH_CONFIG = {
    'MIN_AGE': config('YOUTH_MIN_AGE', default=18, cast=int),
    'MAX_AGE': config('YOUTH_MAX_AGE', default=35, cast=int),
}

# Waste Collection Configuration
WASTE_CONFIG = {
    'DEFAULT_CREDIT_RATE': config('DEFAULT_CREDIT_RATE', default='1.00'),
    'DEFAULT_CO2_REDUCTION_RATE': config('DEFAULT_CO2_REDUCTION_RATE', default='0.5000'),
    'DEFAULT_STOCK_THRESHOLD': config('DEFAULT_STOCK_THRESHOLD', default=5, cast=int),
    'DEFAULT_BONUS_MULTIPLIER': config('DEFAULT_BONUS_MULTIPLIER', default='1.00'),
    'MAX_UPLOAD_SIZE_MB': config('MAX_UPLOAD_SIZE_MB', default=10, cast=int),
}

# File Upload Configuration
UPLOAD_CONFIG = {
    'WASTE_REPORTS_DIR': config('WASTE_REPORTS_UPLOAD_DIR', default='waste_reports/'),
    'PRODUCTS_DIR': config('PRODUCTS_UPLOAD_DIR', default='products/'),
    'VERIFICATION_DOCS_DIR': config('VERIFICATION_DOCS_UPLOAD_DIR', default='verification_documents/'),
    'PROFILE_PICTURES_DIR': config('PROFILE_PICTURES_UPLOAD_DIR', default='profile_pictures/'),
}

# API Configuration
API_CONFIG = {
    'DEFAULT_TIMEOUT_SECONDS': config('API_DEFAULT_TIMEOUT_SECONDS', default=30, cast=int),
    'MAX_REQUESTS_PER_MINUTE': config('API_MAX_REQUESTS_PER_MINUTE', default=100, cast=int),
    'ENABLE_API_VERSIONING': config('ENABLE_API_VERSIONING', default=True, cast=bool),
}

# Geolocation Configuration
GEOLOCATION_CONFIG = {
    'DEFAULT_LATITUDE': config('DEFAULT_LATITUDE', default='-0.0917', cast=float),  # Kisumu coordinates
    'DEFAULT_LONGITUDE': config('DEFAULT_LONGITUDE', default='34.7680', cast=float),
    'GEOLOCATION_TIMEOUT_MS': config('GEOLOCATION_TIMEOUT_MS', default=10000, cast=int),
    'GEOLOCATION_MAX_AGE_MS': config('GEOLOCATION_MAX_AGE_MS', default=300000, cast=int),  # 5 minutes
}

# Analytics Configuration
ANALYTICS_CONFIG = {
    'ENABLE_ANALYTICS': config('ENABLE_ANALYTICS', default=True, cast=bool),
    'ANALYTICS_RETENTION_DAYS': config('ANALYTICS_RETENTION_DAYS', default=365, cast=int),
    'ENABLE_PERFORMANCE_MONITORING': config('ENABLE_PERFORMANCE_MONITORING', default=True, cast=bool),
}

# ===== PAYMENT CONFIGURATION =====
# Site URL for payment callbacks
SITE_URL = config('SITE_URL', default='http://localhost:3000')

# M-Pesa Configuration
MPESA_CONSUMER_KEY = config('MPESA_CONSUMER_KEY', default='')
MPESA_CONSUMER_SECRET = config('MPESA_CONSUMER_SECRET', default='')
MPESA_BUSINESS_SHORT_CODE = config('MPESA_BUSINESS_SHORT_CODE', default='174379')
MPESA_PASSKEY = config('MPESA_PASSKEY', default='')
MPESA_CALLBACK_URL = config('MPESA_CALLBACK_URL', default='')
MPESA_SANDBOX = config('MPESA_SANDBOX', default=True, cast=bool)

# Paystack Configuration
PAYSTACK_PUBLIC_KEY = config('PAYSTACK_PUBLIC_KEY', default='')
PAYSTACK_SECRET_KEY = config('PAYSTACK_SECRET_KEY', default='')
PAYSTACK_SANDBOX = config('PAYSTACK_SANDBOX', default=True, cast=bool)

# ===== GOOGLE MAPS CONFIGURATION =====
GOOGLE_MAPS_API_KEY = config('GOOGLE_MAPS_API_KEY', default='')
GOOGLE_MAPS_JS_API_KEY = config('GOOGLE_MAPS_JS_API_KEY', default='')
