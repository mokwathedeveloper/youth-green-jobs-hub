# Generated by Django 5.2.6 on 2025-09-22 12:56

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('logo', models.ImageField(blank=True, null=True, upload_to='partners/logos/')),
                ('partner_type', models.CharField(choices=[('ngo', 'Non-Governmental Organization'), ('company', 'Private Company'), ('government', 'Government Agency'), ('cooperative', 'Cooperative'), ('educational', 'Educational Institution'), ('international', 'International Organization')], max_length=20)),
                ('contact_person', models.CharField(max_length=100)),
                ('contact_email', models.EmailField(max_length=254)),
                ('contact_phone', models.CharField(max_length=20)),
                ('website', models.URLField(blank=True, validators=[django.core.validators.URLValidator()])),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=100)),
                ('county', models.CharField(max_length=100)),
                ('country', models.CharField(default='Kenya', max_length=100)),
                ('partnership_start_date', models.DateField()),
                ('partnership_end_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending Approval'), ('active', 'Active'), ('suspended', 'Suspended'), ('terminated', 'Terminated')], default='pending', max_length=20)),
                ('focus_areas', models.JSONField(default=list, help_text='Areas of focus (waste_management, education, funding, etc.)')),
                ('api_key', models.CharField(blank=True, help_text='API key for partner integration', max_length=100)),
                ('webhook_url', models.URLField(blank=True, help_text='Webhook URL for partner notifications')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_partnerships', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Partner',
                'verbose_name_plural': 'Partners',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Collaboration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('collaboration_type', models.CharField(choices=[('funding', 'Funding/Grants'), ('equipment', 'Equipment Donation'), ('training', 'Training Programs'), ('awareness', 'Awareness Campaigns'), ('research', 'Research Projects'), ('technology', 'Technology Support'), ('market_access', 'Market Access'), ('capacity_building', 'Capacity Building')], max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('budget_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('currency', models.CharField(default='KES', max_length=3)),
                ('target_beneficiaries', models.PositiveIntegerField(blank=True, help_text='Expected number of beneficiaries', null=True)),
                ('target_waste_kg', models.DecimalField(blank=True, decimal_places=2, help_text='Target waste collection in kg', max_digits=10, null=True)),
                ('status', models.CharField(choices=[('planning', 'Planning'), ('active', 'Active'), ('on_hold', 'On Hold'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='planning', max_length=20)),
                ('progress_percentage', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(100)])),
                ('actual_beneficiaries', models.PositiveIntegerField(blank=True, help_text='Actual number of beneficiaries reached', null=True)),
                ('actual_waste_kg', models.DecimalField(blank=True, decimal_places=2, help_text='Actual waste collected in kg', max_digits=10, null=True)),
                ('documents', models.JSONField(default=list, help_text='List of collaboration documents and reports')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collaborations', to='partnerships.partner')),
            ],
            options={
                'verbose_name': 'Collaboration',
                'verbose_name_plural': 'Collaborations',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='PartnerIntegration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('integration_type', models.CharField(choices=[('webhook', 'Webhook Integration'), ('api', 'REST API Integration'), ('file_transfer', 'File Transfer'), ('database', 'Database Integration')], default='webhook', max_length=50)),
                ('base_url', models.URLField(blank=True)),
                ('authentication_method', models.CharField(choices=[('api_key', 'API Key'), ('oauth', 'OAuth'), ('basic', 'Basic Auth'), ('token', 'Bearer Token')], default='api_key', max_length=20)),
                ('api_credentials', models.JSONField(default=dict, help_text='API credentials and configuration')),
                ('data_mapping', models.JSONField(default=dict, help_text='Field mapping between systems')),
                ('sync_frequency', models.CharField(choices=[('real_time', 'Real-time'), ('hourly', 'Hourly'), ('daily', 'Daily'), ('weekly', 'Weekly'), ('manual', 'Manual')], default='daily', max_length=20)),
                ('last_sync_at', models.DateTimeField(blank=True, null=True)),
                ('sync_status', models.CharField(choices=[('success', 'Success'), ('failed', 'Failed'), ('pending', 'Pending')], default='pending', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('partner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='integration', to='partnerships.partner')),
            ],
            options={
                'verbose_name': 'Partner Integration',
                'verbose_name_plural': 'Partner Integrations',
            },
        ),
        migrations.CreateModel(
            name='PartnershipAgreement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('agreement_type', models.CharField(choices=[('mou', 'Memorandum of Understanding'), ('contract', 'Service Contract'), ('grant', 'Grant Agreement'), ('partnership', 'Partnership Agreement'), ('nda', 'Non-Disclosure Agreement')], max_length=20)),
                ('signed_date', models.DateField()),
                ('effective_date', models.DateField()),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('terms_and_conditions', models.TextField()),
                ('deliverables', models.JSONField(default=list, help_text='List of deliverables and milestones')),
                ('total_value', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('payment_terms', models.TextField(blank=True)),
                ('document_url', models.URLField(blank=True, help_text='URL to the signed agreement document')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agreements', to='partnerships.partner')),
            ],
            options={
                'verbose_name': 'Partnership Agreement',
                'verbose_name_plural': 'Partnership Agreements',
                'ordering': ['-signed_date'],
            },
        ),
        migrations.CreateModel(
            name='PartnershipReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('report_type', models.CharField(choices=[('progress', 'Progress Report'), ('financial', 'Financial Report'), ('impact', 'Impact Assessment'), ('quarterly', 'Quarterly Report'), ('annual', 'Annual Report')], max_length=20)),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('report_data', models.JSONField(default=dict, help_text='Report metrics and data')),
                ('executive_summary', models.TextField()),
                ('key_achievements', models.JSONField(default=list)),
                ('challenges', models.JSONField(default=list)),
                ('recommendations', models.JSONField(default=list)),
                ('report_document_url', models.URLField(blank=True, help_text='URL to the full report document')),
                ('is_published', models.BooleanField(default=False)),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('collaboration', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='partnerships.collaboration')),
                ('generated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='partnerships.partner')),
            ],
            options={
                'verbose_name': 'Partnership Report',
                'verbose_name_plural': 'Partnership Reports',
                'ordering': ['-period_end'],
            },
        ),
    ]
