# Generated by Django 5.2.6 on 2025-09-19 09:09

import django.db.models.deletion
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('products', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PaymentProvider',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(choices=[('mpesa', 'M-Pesa'), ('paystack', 'Paystack'), ('bank_transfer', 'Bank Transfer'), ('cash_on_delivery', 'Cash on Delivery')], max_length=50, unique=True)),
                ('display_name', models.CharField(help_text='Display name for users', max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('is_sandbox', models.BooleanField(default=True, help_text='Whether this is a sandbox/test environment')),
                ('configuration', models.JSONField(default=dict, help_text='Provider-specific configuration (API keys, endpoints, etc.)')),
                ('supported_currencies', models.CharField(default='KES', help_text='Comma-separated list of supported currency codes', max_length=200)),
                ('transaction_fee_percentage', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Transaction fee as percentage', max_digits=5)),
                ('fixed_fee', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Fixed transaction fee in KSh', max_digits=10)),
                ('min_amount', models.DecimalField(decimal_places=2, default=Decimal('1.00'), help_text='Minimum transaction amount', max_digits=10)),
                ('max_amount', models.DecimalField(decimal_places=2, default=Decimal('1000000.00'), help_text='Maximum transaction amount', max_digits=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Payment Provider',
                'verbose_name_plural': 'Payment Providers',
                'ordering': ['display_name'],
            },
        ),
        migrations.CreateModel(
            name='PaymentTransaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('transaction_id', models.CharField(help_text='Unique transaction identifier', max_length=100, unique=True)),
                ('external_transaction_id', models.CharField(blank=True, help_text='External payment provider transaction ID', max_length=200, null=True)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Transaction amount', max_digits=12)),
                ('currency', models.CharField(default='KES', help_text='Transaction currency code', max_length=3)),
                ('fee_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Transaction fee charged', max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded'), ('expired', 'Expired')], default='pending', help_text='Current transaction status', max_length=20)),
                ('customer_phone', models.CharField(blank=True, help_text='Customer phone number for mobile payments', max_length=15, null=True)),
                ('customer_email', models.EmailField(blank=True, help_text='Customer email for payment notifications', max_length=254, null=True)),
                ('provider_data', models.JSONField(default=dict, help_text='Provider-specific transaction data')),
                ('webhook_data', models.JSONField(default=dict, help_text='Webhook callback data from payment provider')),
                ('initiated_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('failure_reason', models.TextField(blank=True, help_text='Reason for payment failure', null=True)),
                ('retry_count', models.PositiveIntegerField(default=0, help_text='Number of retry attempts')),
                ('max_retries', models.PositiveIntegerField(default=3, help_text='Maximum number of retry attempts')),
                ('order', models.ForeignKey(help_text='Order this payment is for', on_delete=django.db.models.deletion.CASCADE, related_name='payment_transactions', to='products.order')),
                ('provider', models.ForeignKey(help_text='Payment provider used', on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='products.paymentprovider')),
            ],
            options={
                'verbose_name': 'Payment Transaction',
                'verbose_name_plural': 'Payment Transactions',
                'ordering': ['-initiated_at'],
                'indexes': [models.Index(fields=['transaction_id'], name='products_pa_transac_b0f1fb_idx'), models.Index(fields=['external_transaction_id'], name='products_pa_externa_298602_idx'), models.Index(fields=['status'], name='products_pa_status_21ef9c_idx'), models.Index(fields=['order'], name='products_pa_order_i_27ba9f_idx')],
            },
        ),
    ]
