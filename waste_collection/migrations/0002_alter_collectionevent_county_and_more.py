# Generated by Django 5.2.6 on 2025-09-19 10:12

import django.contrib.gis.db.models.fields
import django.db.models.deletion
import uuid
import waste_collection.models
import youth_green_jobs_backend.config
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('waste_collection', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterField(
            model_name='collectionevent',
            name='county',
            field=models.CharField(default=youth_green_jobs_backend.config.get_default_county, max_length=100),
        ),
        migrations.AlterField(
            model_name='collectionpoint',
            name='county',
            field=models.CharField(default=youth_green_jobs_backend.config.get_default_county, max_length=100),
        ),
        migrations.AlterField(
            model_name='wastereport',
            name='county',
            field=models.CharField(default=youth_green_jobs_backend.config.get_default_county, max_length=100),
        ),
        migrations.AlterField(
            model_name='wastereport',
            name='photo',
            field=models.ImageField(blank=True, help_text='Photo of the waste', null=True, upload_to=waste_collection.models.waste_report_photo_path),
        ),
        migrations.CreateModel(
            name='CollectionPointLocation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('coordinates', django.contrib.gis.db.models.fields.PointField(help_text='Precise GPS coordinates of the collection point', srid=4326)),
                ('street_address', models.CharField(blank=True, max_length=255)),
                ('neighborhood', models.CharField(blank=True, max_length=100)),
                ('ward', models.CharField(blank=True, max_length=100)),
                ('constituency', models.CharField(blank=True, max_length=100)),
                ('county', models.CharField(blank=True, max_length=100)),
                ('postal_code', models.CharField(blank=True, max_length=20)),
                ('place_id', models.CharField(blank=True, help_text='Google Places API place ID', max_length=255)),
                ('plus_code', models.CharField(blank=True, help_text='Google Plus Code for the location', max_length=20)),
                ('accessibility_features', models.JSONField(default=dict, help_text='Accessibility features (wheelchair_accessible, parking, etc.)')),
                ('is_verified', models.BooleanField(default=False, help_text='Whether location has been verified by field team')),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('collection_point', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='location_data', to='waste_collection.collectionpoint')),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_locations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Collection Point Location',
                'verbose_name_plural': 'Collection Point Locations',
            },
        ),
        migrations.CreateModel(
            name='CollectionRoute',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('route_geometry', django.contrib.gis.db.models.fields.LineStringField(blank=True, help_text='Route path as LineString geometry', null=True, srid=4326)),
                ('estimated_duration_minutes', models.PositiveIntegerField(help_text='Estimated time to complete route in minutes')),
                ('estimated_distance_km', models.DecimalField(decimal_places=2, help_text='Estimated distance in kilometers', max_digits=8)),
                ('optimization_score', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Route efficiency score (0-100)', max_digits=5)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Collection Route',
                'verbose_name_plural': 'Collection Routes',
                'ordering': ['-optimization_score', 'name'],
            },
        ),
        migrations.CreateModel(
            name='GeospatialAnalytics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('analysis_type', models.CharField(choices=[('coverage', 'Coverage Analysis'), ('density', 'Collection Point Density'), ('efficiency', 'Route Efficiency'), ('accessibility', 'Accessibility Analysis'), ('demand', 'Demand Prediction')], max_length=50)),
                ('analysis_area', django.contrib.gis.db.models.fields.PolygonField(blank=True, help_text='Geographic area for analysis', null=True, srid=4326)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('results', models.JSONField(default=dict, help_text='Analysis results and metrics')),
                ('map_data', models.JSONField(default=dict, help_text='GeoJSON data for map visualizations')),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('generated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Geospatial Analytics',
                'verbose_name_plural': 'Geospatial Analytics',
                'ordering': ['-generated_at'],
            },
        ),
        migrations.CreateModel(
            name='RouteOptimization',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('start_location', django.contrib.gis.db.models.fields.PointField(help_text='Starting point for optimization', srid=4326)),
                ('max_duration_minutes', models.PositiveIntegerField(default=480, help_text='Maximum route duration in minutes')),
                ('max_distance_km', models.DecimalField(decimal_places=2, default=Decimal('100.00'), help_text='Maximum route distance in kilometers', max_digits=8)),
                ('vehicle_capacity_kg', models.DecimalField(decimal_places=2, default=Decimal('1000.00'), help_text='Vehicle capacity in kilograms', max_digits=8)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('requested_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('optimization_results', models.JSONField(default=dict, help_text='Detailed optimization results and metrics')),
                ('collection_points', models.ManyToManyField(help_text='Collection points to include in optimization', to='waste_collection.collectionpoint')),
                ('optimized_route', models.ForeignKey(blank=True, help_text='Generated optimized route', null=True, on_delete=django.db.models.deletion.SET_NULL, to='waste_collection.collectionroute')),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Route Optimization',
                'verbose_name_plural': 'Route Optimizations',
                'ordering': ['-requested_at'],
            },
        ),
    ]
