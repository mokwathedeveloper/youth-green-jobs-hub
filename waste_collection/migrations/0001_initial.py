# Generated by Django 5.2.6 on 2025-09-22 12:56

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='WasteCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('category_type', models.CharField(choices=[('plastic', 'Plastic'), ('paper', 'Paper'), ('metal', 'Metal'), ('glass', 'Glass'), ('organic', 'Organic'), ('electronic', 'Electronic'), ('textile', 'Textile'), ('hazardous', 'Hazardous')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('credit_rate', models.DecimalField(decimal_places=2, default=Decimal('1.00'), help_text='Credits per kg of this waste type', max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Waste Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CollectionEvent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('event_type', models.CharField(choices=[('community_cleanup', 'Community Cleanup'), ('beach_cleanup', 'Beach Cleanup'), ('park_cleanup', 'Park Cleanup'), ('school_program', 'School Program'), ('corporate_event', 'Corporate Event')], max_length=20)),
                ('status', models.CharField(choices=[('planned', 'Planned'), ('active', 'Active'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='planned', max_length=20)),
                ('location_name', models.CharField(max_length=200)),
                ('address', models.CharField(max_length=255)),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('start_datetime', models.DateTimeField()),
                ('end_datetime', models.DateTimeField()),
                ('registration_deadline', models.DateTimeField(blank=True, null=True)),
                ('max_participants', models.PositiveIntegerField(blank=True, null=True)),
                ('total_waste_collected', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organizer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organized_events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-start_datetime'],
            },
        ),
        migrations.CreateModel(
            name='EventParticipation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('registered_at', models.DateTimeField(auto_now_add=True)),
                ('attended', models.BooleanField(default=False)),
                ('waste_collected', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=8)),
                ('credits_earned', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='waste_collection.collectionevent')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'event')},
            },
        ),
        migrations.AddField(
            model_name='collectionevent',
            name='participants',
            field=models.ManyToManyField(blank=True, through='waste_collection.EventParticipation', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='CollectionPoint',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('point_type', models.CharField(choices=[('drop_off', 'Drop-off Point'), ('collection_center', 'Collection Center'), ('recycling_facility', 'Recycling Facility')], default='drop_off', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('address', models.CharField(max_length=255)),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('operating_hours', models.CharField(blank=True, max_length=200)),
                ('contact_phone', models.CharField(blank=True, max_length=20)),
                ('contact_email', models.EmailField(blank=True, max_length=254)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('accepted_categories', models.ManyToManyField(blank=True, to='waste_collection.wastecategory')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='WasteReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('estimated_weight', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('actual_weight', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('location_description', models.CharField(max_length=255)),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('status', models.CharField(choices=[('reported', 'Reported'), ('verified', 'Verified'), ('collected', 'Collected'), ('processed', 'Processed'), ('rejected', 'Rejected')], default='reported', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='waste_reports/')),
                ('credits_awarded', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('reported_at', models.DateTimeField(auto_now_add=True)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('collected_at', models.DateTimeField(blank=True, null=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='waste_collection.wastecategory')),
                ('collection_point', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='waste_collection.collectionpoint')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='waste_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-reported_at'],
            },
        ),
        migrations.CreateModel(
            name='CreditTransaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('transaction_type', models.CharField(choices=[('earned', 'Credits Earned'), ('redeemed', 'Credits Redeemed'), ('bonus', 'Bonus Credits'), ('penalty', 'Penalty Deduction'), ('adjustment', 'Manual Adjustment')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.CharField(max_length=255)),
                ('balance_before', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('balance_after', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='credit_transactions', to=settings.AUTH_USER_MODEL)),
                ('waste_report', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='waste_collection.wastereport')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
